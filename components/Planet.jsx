/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 planet.gltf
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';

export default ({ isDragging, mouseTrack, position }) => {
  const { nodes, materials } = useGLTF('/planet-core.gltf');
  const ref = useRef();

  useFrame((state, delta) => {
    ref.current.rotation.x -= delta / 30;
    ref.current.rotation.y -= delta / 45;
  });

  useEffect(() => {
    if (ref.current && isDragging) {
      ref.current.rotation.x += mouseTrack.y * 0.002;
      ref.current.rotation.y += mouseTrack.x * 0.002;
    }
  }, [mouseTrack]);

  return (
    <group ref={ref} position={position} scale={2} dispose={null}>
      <mesh geometry={nodes.Sphere.geometry}>
        <meshStandardMaterial
          map={materials['Material.001'].map}
          normalMap={materials['Material.001'].normalMap}
          normalScale={materials['Material.001'].normalScale}
          normalMap-encoding={THREE.LinearEncoding}
        />
      </mesh>
      <mesh
        scale={1.015}
        geometry={nodes.Sphere001.geometry}
        material={materials['Material.002']}
      />
    </group>
  );
};

useGLTF.preload('/planet-core.gltf');
